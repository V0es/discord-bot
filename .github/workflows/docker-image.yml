name: Docker Image CI/CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  push_to_registry:
    name: Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    env:     
      DOCKER_REGISTRY: docker.io      
      DOCKER_IMAGE: v0es/discord-swamp-bot      
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}  
      DOCKER_TARGET_PLATFORM: linux/arm/v8

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Prepare      
        if: success()      
        id: prepare      
        run: |        
          echo ::set-output name=docker_platform::${DOCKER_TARGET_PLATFORM}        
          echo ::set-output name=docker_image::${DOCKER_REGISTRY}/${DOCKER_IMAGE}        
          echo ::set-output name=version::latest    
      
      - name: Docker Login      
        if: success()      
        run: |        
          echo "${DOCKER_PASSWORD}" | docker login ${DOCKER_REGISTRY} --username "${DOCKER_USERNAME}" --password-stdin          
      
      - name: Run Buildx (push image)      
        if: success()      
        run: |        
          docker buildx build \
          --platform ${{ steps.prepare.outputs.docker_platform }} \
          --tag ${{ steps.prepare.outputs.docker_image }}:${{ steps.prepare.outputs.version }} \
          --file ./Dockerfile \
          --output type=image,push=true \
          --no-cache .

   deploy-container:
      name: Deploy container to server
      runs-on: ubuntu-latest
     
      env: 
        YANDEX_API_KEY: ${{ secrets.YANDEX_API_KEY }}
        PYOWM_API_KEY: ${{ secrets.PYOWM_API_KEY }}
        PORTAINER_API_TOKEN: ${{ secrets.PORTAINER_API_TOKEN }}
        NEWS_API_KEY: ${{ secrets.NEWS_API_KEY }}
        GUILD_ID: ${{ secrets.GUILD_ID }}
        DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        PORTAINER_USERNAME: ${{ secrets.PORTAINER_USERNAME }}
        PORTAINER_PASSWORD: ${{ secrets.PORTAINER_PASSWORD }}
        DNS_USERNAME: ${{ secrets.DNS_USERNAME }}
        DNS_PASSWORD: ${{ secrets.DNS_PASSWORD }}
        RPI_ADDRESS: ${{ secrets.RPI_ADDRESS }}
        ENDPOINT_ID: ${{ secrets.ENDPOINT_ID }}

      steps:
      - name: Check out repo
        uses: actions/checkout@v3
      
      - name: Install Python
        uses: actions/setup-python@v2

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Run deploy script
        run: DEPLOY=true python deploy.py
